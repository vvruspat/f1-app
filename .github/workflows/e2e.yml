name: E2E Tests

on:
  push:
    branches:
      - staging

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install Playwright browsers
        working-directory: ./apps/frontend
        run: npx playwright install --with-deps

      - name: Create backend .env file
        run: |
          echo "MONGODB_URI=${{ vars.MONGODB_URI }}" > ./apps/backend/.env
          echo "ERGAST_API_BASE=${{ vars.ERGAST_API_BASE }}" >> ./apps/backend/.env
          echo "REDIS_URI=${{ vars.REDIS_URI }}" >> ./apps/backend/.env
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> ./apps/backend/.env
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Create frontend .env file
        run: |
          echo "NEXT_API_URL=${{ vars.NEXT_API_URL }}" > ./apps/frontend/.env
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> ./apps/frontend/.env
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Start backend & frontend server
        run: npm run dev

      - name: Wait for backend to be ready
        run: |
          echo "Waiting for backend to be ready..."
          until curl -s http://localhost:3002/; do
            sleep 5
          done
          echo "Backend is ready!"

      - name: Wait for frontend to be ready
        run: |
          echo "Waiting for frontend to be ready..."
          until curl -s http://localhost:3000/; do
            sleep 5
          done
          echo "Frontend is ready!"

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/frontend/playwright-report/
          retention-days: 7